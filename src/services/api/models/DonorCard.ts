/* tslint:disable */
/* eslint-disable */
/**
 * TelegramWebDonorSearch API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Kell } from './Kell';
import {
    KellFromJSON,
    KellFromJSONTyped,
    KellToJSON,
} from './Kell';
import type { PatchedDonorCardBloodGroup } from './PatchedDonorCardBloodGroup';
import {
    PatchedDonorCardBloodGroupFromJSON,
    PatchedDonorCardBloodGroupFromJSONTyped,
    PatchedDonorCardBloodGroupToJSON,
} from './PatchedDonorCardBloodGroup';

/**
 * 
 * @export
 * @interface DonorCard
 */
export interface DonorCard {
    /**
     * 
     * @type {PatchedDonorCardBloodGroup}
     * @memberof DonorCard
     */
    bloodGroup?: PatchedDonorCardBloodGroup | null;
    /**
     * 
     * @type {Kell}
     * @memberof DonorCard
     */
    kell?: Kell | null;
    /**
     * 
     * @type {boolean}
     * @memberof DonorCard
     */
    blood?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DonorCard
     */
    plasma?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DonorCard
     */
    platelets?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DonorCard
     */
    erythrocytes?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DonorCard
     */
    leukocytes?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DonorCard
     */
    cantDonate?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DonorCard
     */
    cantDonateDisqualification?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DonorCard
     */
    cantDonateSurgery?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DonorCard
     */
    cantDonateLactation?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DonorCard
     */
    cantDonateOther?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DonorCard
     */
    cantDonateDonor?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof DonorCard
     */
    cantDonateNotice?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof DonorCard
     */
    boneDonor?: boolean;
    /**
     * число донаций пользователя до регистрации на DonorSearch
     * @type {number}
     * @memberof DonorCard
     */
    donationsBeforeReg?: number | null;
    /**
     * 
     * @type {number}
     * @memberof DonorCard
     */
    donorStatus?: number;
}

/**
 * Check if a given object implements the DonorCard interface.
 */
export function instanceOfDonorCard(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DonorCardFromJSON(json: any): DonorCard {
    return DonorCardFromJSONTyped(json, false);
}

export function DonorCardFromJSONTyped(json: any, ignoreDiscriminator: boolean): DonorCard {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bloodGroup': !exists(json, 'blood_group') ? undefined : PatchedDonorCardBloodGroupFromJSON(json['blood_group']),
        'kell': !exists(json, 'kell') ? undefined : KellFromJSON(json['kell']),
        'blood': !exists(json, 'blood') ? undefined : json['blood'],
        'plasma': !exists(json, 'plasma') ? undefined : json['plasma'],
        'platelets': !exists(json, 'platelets') ? undefined : json['platelets'],
        'erythrocytes': !exists(json, 'erythrocytes') ? undefined : json['erythrocytes'],
        'leukocytes': !exists(json, 'leukocytes') ? undefined : json['leukocytes'],
        'cantDonate': !exists(json, 'cant_donate') ? undefined : json['cant_donate'],
        'cantDonateDisqualification': !exists(json, 'cant_donate_disqualification') ? undefined : json['cant_donate_disqualification'],
        'cantDonateSurgery': !exists(json, 'cant_donate_surgery') ? undefined : json['cant_donate_surgery'],
        'cantDonateLactation': !exists(json, 'cant_donate_lactation') ? undefined : json['cant_donate_lactation'],
        'cantDonateOther': !exists(json, 'cant_donate_other') ? undefined : json['cant_donate_other'],
        'cantDonateDonor': !exists(json, 'cant_donate_donor') ? undefined : json['cant_donate_donor'],
        'cantDonateNotice': !exists(json, 'cant_donate_notice') ? undefined : (json['cant_donate_notice'] === null ? null : new Date(json['cant_donate_notice'])),
        'boneDonor': !exists(json, 'bone_donor') ? undefined : json['bone_donor'],
        'donationsBeforeReg': !exists(json, 'donations_before_reg') ? undefined : json['donations_before_reg'],
        'donorStatus': !exists(json, 'donor_status') ? undefined : json['donor_status'],
    };
}

export function DonorCardToJSON(value?: DonorCard | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blood_group': PatchedDonorCardBloodGroupToJSON(value.bloodGroup),
        'kell': KellToJSON(value.kell),
        'blood': value.blood,
        'plasma': value.plasma,
        'platelets': value.platelets,
        'erythrocytes': value.erythrocytes,
        'leukocytes': value.leukocytes,
        'cant_donate': value.cantDonate,
        'cant_donate_disqualification': value.cantDonateDisqualification,
        'cant_donate_surgery': value.cantDonateSurgery,
        'cant_donate_lactation': value.cantDonateLactation,
        'cant_donate_other': value.cantDonateOther,
        'cant_donate_donor': value.cantDonateDonor,
        'cant_donate_notice': value.cantDonateNotice === undefined ? undefined : (value.cantDonateNotice === null ? null : value.cantDonateNotice.toISOString().substring(0,10)),
        'bone_donor': value.boneDonor,
        'donations_before_reg': value.donationsBeforeReg,
        'donor_status': value.donorStatus,
    };
}

