/* tslint:disable */
/* eslint-disable */
/**
 * TelegramWebDonorSearch API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BlankEnum } from './BlankEnum';
import {
    BlankEnumFromJSON,
    BlankEnumFromJSONTyped,
    BlankEnumToJSON,
} from './BlankEnum';
import type { BloodClassF07Enum } from './BloodClassF07Enum';
import {
    BloodClassF07EnumFromJSON,
    BloodClassF07EnumFromJSONTyped,
    BloodClassF07EnumToJSON,
} from './BloodClassF07Enum';
import type { BloodStationSmall } from './BloodStationSmall';
import {
    BloodStationSmallFromJSON,
    BloodStationSmallFromJSONTyped,
    BloodStationSmallToJSON,
} from './BloodStationSmall';
import type { City } from './City';
import {
    CityFromJSON,
    CityFromJSONTyped,
    CityToJSON,
} from './City';
import type { DonationRejectReason } from './DonationRejectReason';
import {
    DonationRejectReasonFromJSON,
    DonationRejectReasonFromJSONTyped,
    DonationRejectReasonToJSON,
} from './DonationRejectReason';
import type { InlinePicture } from './InlinePicture';
import {
    InlinePictureFromJSON,
    InlinePictureFromJSONTyped,
    InlinePictureToJSON,
} from './InlinePicture';
import type { PaymentTypeEnum } from './PaymentTypeEnum';
import {
    PaymentTypeEnumFromJSON,
    PaymentTypeEnumFromJSONTyped,
    PaymentTypeEnumToJSON,
} from './PaymentTypeEnum';

/**
 * 
 * @export
 * @interface Donation
 */
export interface Donation {
    /**
     * 
     * @type {number}
     * @memberof Donation
     */
    readonly id: number;
    /**
     * 
     * @type {number}
     * @memberof Donation
     */
    bloodStationId?: number | null;
    /**
     * 
     * @type {BloodStationSmall}
     * @memberof Donation
     */
    readonly bloodStation: BloodStationSmall;
    /**
     * 
     * @type {InlinePicture}
     * @memberof Donation
     */
    readonly image: InlinePicture;
    /**
     * 
     * @type {number}
     * @memberof Donation
     */
    imageId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Donation
     */
    cityId: number;
    /**
     * 
     * @type {City}
     * @memberof Donation
     */
    readonly city: City;
    /**
     * 
     * @type {string}
     * @memberof Donation
     */
    readonly legacyImage: string;
    /**
     * 
     * @type {string}
     * @memberof Donation
     */
    readonly hasReply: string;
    /**
     * 
     * @type {string}
     * @memberof Donation
     */
    readonly replyViewed: string;
    /**
     * 
     * @type {string}
     * @memberof Donation
     */
    readonly allowedModify: string;
    /**
     * 
     * @type {Date}
     * @memberof Donation
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Donation
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {BlankEnum}
     * @memberof Donation
     */
    readonly status: BlankEnum;
    /**
     * 
     * @type {DonationRejectReason}
     * @memberof Donation
     */
    rejectReason: DonationRejectReason | null;
    /**
     * 
     * @type {Date}
     * @memberof Donation
     */
    donateAt: Date;
    /**
     * 
     * @type {BloodClassF07Enum}
     * @memberof Donation
     */
    bloodClass?: BloodClassF07Enum;
    /**
     * 
     * @type {PaymentTypeEnum}
     * @memberof Donation
     */
    paymentType?: PaymentTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof Donation
     */
    isOut?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Donation
     */
    volume?: number;
    /**
     * 
     * @type {number}
     * @memberof Donation
     */
    paymentCost?: number;
    /**
     * 
     * @type {Date}
     * @memberof Donation
     */
    onModerationDate?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof Donation
     */
    withImage?: boolean;
    /**
     * Данная запись сгенерирована с помощью модуля распознования справок
     * @type {boolean}
     * @memberof Donation
     */
    createdUsingOcr?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Donation
     */
    readonly user: number;
}

/**
 * Check if a given object implements the Donation interface.
 */
export function instanceOfDonation(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "bloodStation" in value;
    isInstance = isInstance && "image" in value;
    isInstance = isInstance && "cityId" in value;
    isInstance = isInstance && "city" in value;
    isInstance = isInstance && "legacyImage" in value;
    isInstance = isInstance && "hasReply" in value;
    isInstance = isInstance && "replyViewed" in value;
    isInstance = isInstance && "allowedModify" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "rejectReason" in value;
    isInstance = isInstance && "donateAt" in value;
    isInstance = isInstance && "user" in value;

    return isInstance;
}

export function DonationFromJSON(json: any): Donation {
    return DonationFromJSONTyped(json, false);
}

export function DonationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Donation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'bloodStationId': !exists(json, 'blood_station_id') ? undefined : json['blood_station_id'],
        'bloodStation': BloodStationSmallFromJSON(json['blood_station']),
        'image': InlinePictureFromJSON(json['image']),
        'imageId': !exists(json, 'image_id') ? undefined : json['image_id'],
        'cityId': json['city_id'],
        'city': CityFromJSON(json['city']),
        'legacyImage': json['legacy_image'],
        'hasReply': json['has_reply'],
        'replyViewed': json['reply_viewed'],
        'allowedModify': json['allowed_modify'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'status': BlankEnumFromJSON(json['status']),
        'rejectReason': DonationRejectReasonFromJSON(json['reject_reason']),
        'donateAt': (new Date(json['donate_at'])),
        'bloodClass': !exists(json, 'blood_class') ? undefined : BloodClassF07EnumFromJSON(json['blood_class']),
        'paymentType': !exists(json, 'payment_type') ? undefined : PaymentTypeEnumFromJSON(json['payment_type']),
        'isOut': !exists(json, 'is_out') ? undefined : json['is_out'],
        'volume': !exists(json, 'volume') ? undefined : json['volume'],
        'paymentCost': !exists(json, 'payment_cost') ? undefined : json['payment_cost'],
        'onModerationDate': !exists(json, 'on_moderation_date') ? undefined : (json['on_moderation_date'] === null ? null : new Date(json['on_moderation_date'])),
        'withImage': !exists(json, 'with_image') ? undefined : json['with_image'],
        'createdUsingOcr': !exists(json, 'created_using_ocr') ? undefined : json['created_using_ocr'],
        'user': json['user'],
    };
}

export function DonationToJSON(value?: Donation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blood_station_id': value.bloodStationId,
        'image_id': value.imageId,
        'city_id': value.cityId,
        'reject_reason': DonationRejectReasonToJSON(value.rejectReason),
        'donate_at': (value.donateAt.toISOString().substring(0,10)),
        'blood_class': BloodClassF07EnumToJSON(value.bloodClass),
        'payment_type': PaymentTypeEnumToJSON(value.paymentType),
        'is_out': value.isOut,
        'volume': value.volume,
        'payment_cost': value.paymentCost,
        'on_moderation_date': value.onModerationDate === undefined ? undefined : (value.onModerationDate === null ? null : value.onModerationDate.toISOString().substring(0,10)),
        'with_image': value.withImage,
        'created_using_ocr': value.createdUsingOcr,
    };
}

