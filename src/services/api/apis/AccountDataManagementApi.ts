/* tslint:disable */
/* eslint-disable */
/**
 * TelegramWebDonorSearch API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AuthLogoutCreate200Response,
  ChangePassword,
  EmailChangeSerialzier,
  EmailConfirmationSerialzier,
  PhoneChangeSerialzier,
  PhoneConfirmationSerialzier,
  User,
} from '../models/index';
import {
    AuthLogoutCreate200ResponseFromJSON,
    AuthLogoutCreate200ResponseToJSON,
    ChangePasswordFromJSON,
    ChangePasswordToJSON,
    EmailChangeSerialzierFromJSON,
    EmailChangeSerialzierToJSON,
    EmailConfirmationSerialzierFromJSON,
    EmailConfirmationSerialzierToJSON,
    PhoneChangeSerialzierFromJSON,
    PhoneChangeSerialzierToJSON,
    PhoneConfirmationSerialzierFromJSON,
    PhoneConfirmationSerialzierToJSON,
    UserFromJSON,
    UserToJSON,
} from '../models/index';

export interface AuthChangeEmailCreateRequest {
    emailChangeSerialzier: EmailChangeSerialzier;
}

export interface AuthChangePasswordCreateRequest {
    changePassword?: ChangePassword;
}

export interface AuthChangePhoneCreateRequest {
    phoneChangeSerialzier: PhoneChangeSerialzier;
}

export interface AuthConfirmEmailCreateRequest {
    emailConfirmationSerialzier: EmailConfirmationSerialzier;
}

export interface AuthConfirmPhoneCreateRequest {
    phoneConfirmationSerialzier: PhoneConfirmationSerialzier;
}

/**
 * 
 */
export class AccountDataManagementApi extends runtime.BaseAPI {

    /**
     * Changes the email address of a user.
     * Change Email Address
     */
    async authChangeEmailCreateRaw(requestParameters: AuthChangeEmailCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthLogoutCreate200Response>> {
        if (requestParameters.emailChangeSerialzier === null || requestParameters.emailChangeSerialzier === undefined) {
            throw new runtime.RequiredError('emailChangeSerialzier','Required parameter requestParameters.emailChangeSerialzier was null or undefined when calling authChangeEmailCreate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/auth/change_email/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: EmailChangeSerialzierToJSON(requestParameters.emailChangeSerialzier),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AuthLogoutCreate200ResponseFromJSON(jsonValue));
    }

    /**
     * Changes the email address of a user.
     * Change Email Address
     */
    async authChangeEmailCreate(requestParameters: AuthChangeEmailCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthLogoutCreate200Response> {
        const response = await this.authChangeEmailCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Allows an authenticated user to change their password.
     * Change Password
     */
    async authChangePasswordCreateRaw(requestParameters: AuthChangePasswordCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<User>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/auth/change_password/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ChangePasswordToJSON(requestParameters.changePassword),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserFromJSON(jsonValue));
    }

    /**
     * Allows an authenticated user to change their password.
     * Change Password
     */
    async authChangePasswordCreate(requestParameters: AuthChangePasswordCreateRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<User> {
        const response = await this.authChangePasswordCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Changes the phone number of a user.
     * Change Phone Number
     */
    async authChangePhoneCreateRaw(requestParameters: AuthChangePhoneCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthLogoutCreate200Response>> {
        if (requestParameters.phoneChangeSerialzier === null || requestParameters.phoneChangeSerialzier === undefined) {
            throw new runtime.RequiredError('phoneChangeSerialzier','Required parameter requestParameters.phoneChangeSerialzier was null or undefined when calling authChangePhoneCreate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/auth/change_phone/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PhoneChangeSerialzierToJSON(requestParameters.phoneChangeSerialzier),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AuthLogoutCreate200ResponseFromJSON(jsonValue));
    }

    /**
     * Changes the phone number of a user.
     * Change Phone Number
     */
    async authChangePhoneCreate(requestParameters: AuthChangePhoneCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthLogoutCreate200Response> {
        const response = await this.authChangePhoneCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Confirms a user\'s email address using the provided confirmation code.
     * Confirm Email Address
     */
    async authConfirmEmailCreateRaw(requestParameters: AuthConfirmEmailCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthLogoutCreate200Response>> {
        if (requestParameters.emailConfirmationSerialzier === null || requestParameters.emailConfirmationSerialzier === undefined) {
            throw new runtime.RequiredError('emailConfirmationSerialzier','Required parameter requestParameters.emailConfirmationSerialzier was null or undefined when calling authConfirmEmailCreate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/auth/confirm_email/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: EmailConfirmationSerialzierToJSON(requestParameters.emailConfirmationSerialzier),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AuthLogoutCreate200ResponseFromJSON(jsonValue));
    }

    /**
     * Confirms a user\'s email address using the provided confirmation code.
     * Confirm Email Address
     */
    async authConfirmEmailCreate(requestParameters: AuthConfirmEmailCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthLogoutCreate200Response> {
        const response = await this.authConfirmEmailCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Confirms a user\'s phone number using the provided confirmation code.
     * Confirm Phone Number
     */
    async authConfirmPhoneCreateRaw(requestParameters: AuthConfirmPhoneCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthLogoutCreate200Response>> {
        if (requestParameters.phoneConfirmationSerialzier === null || requestParameters.phoneConfirmationSerialzier === undefined) {
            throw new runtime.RequiredError('phoneConfirmationSerialzier','Required parameter requestParameters.phoneConfirmationSerialzier was null or undefined when calling authConfirmPhoneCreate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/auth/confirm_phone/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PhoneConfirmationSerialzierToJSON(requestParameters.phoneConfirmationSerialzier),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AuthLogoutCreate200ResponseFromJSON(jsonValue));
    }

    /**
     * Confirms a user\'s phone number using the provided confirmation code.
     * Confirm Phone Number
     */
    async authConfirmPhoneCreate(requestParameters: AuthConfirmPhoneCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthLogoutCreate200Response> {
        const response = await this.authConfirmPhoneCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
