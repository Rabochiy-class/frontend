/* tslint:disable */
/* eslint-disable */
/**
 * TelegramWebDonorSearch API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AMinusAf7Enum } from './AMinusAf7Enum';
import {
    AMinusAf7EnumFromJSON,
    AMinusAf7EnumFromJSONTyped,
    AMinusAf7EnumToJSON,
} from './AMinusAf7Enum';
import type { APlusAf7Enum } from './APlusAf7Enum';
import {
    APlusAf7EnumFromJSON,
    APlusAf7EnumFromJSONTyped,
    APlusAf7EnumToJSON,
} from './APlusAf7Enum';
import type { AbMinusAf7Enum } from './AbMinusAf7Enum';
import {
    AbMinusAf7EnumFromJSON,
    AbMinusAf7EnumFromJSONTyped,
    AbMinusAf7EnumToJSON,
} from './AbMinusAf7Enum';
import type { AbPlusAf7Enum } from './AbPlusAf7Enum';
import {
    AbPlusAf7EnumFromJSON,
    AbPlusAf7EnumFromJSONTyped,
    AbPlusAf7EnumToJSON,
} from './AbPlusAf7Enum';
import type { AddressNeedJoinedUserForBase } from './AddressNeedJoinedUserForBase';
import {
    AddressNeedJoinedUserForBaseFromJSON,
    AddressNeedJoinedUserForBaseFromJSONTyped,
    AddressNeedJoinedUserForBaseToJSON,
} from './AddressNeedJoinedUserForBase';
import type { AddressNeedStatus } from './AddressNeedStatus';
import {
    AddressNeedStatusFromJSON,
    AddressNeedStatusFromJSONTyped,
    AddressNeedStatusToJSON,
} from './AddressNeedStatus';
import type { AddressNeedTimeSlotForBase } from './AddressNeedTimeSlotForBase';
import {
    AddressNeedTimeSlotForBaseFromJSON,
    AddressNeedTimeSlotForBaseFromJSONTyped,
    AddressNeedTimeSlotForBaseToJSON,
} from './AddressNeedTimeSlotForBase';
import type { BMinusAf7Enum } from './BMinusAf7Enum';
import {
    BMinusAf7EnumFromJSON,
    BMinusAf7EnumFromJSONTyped,
    BMinusAf7EnumToJSON,
} from './BMinusAf7Enum';
import type { BPlusAf7Enum } from './BPlusAf7Enum';
import {
    BPlusAf7EnumFromJSON,
    BPlusAf7EnumFromJSONTyped,
    BPlusAf7EnumToJSON,
} from './BPlusAf7Enum';
import type { BloodClass2c1Enum } from './BloodClass2c1Enum';
import {
    BloodClass2c1EnumFromJSON,
    BloodClass2c1EnumFromJSONTyped,
    BloodClass2c1EnumToJSON,
} from './BloodClass2c1Enum';
import type { BloodStationSmall } from './BloodStationSmall';
import {
    BloodStationSmallFromJSON,
    BloodStationSmallFromJSONTyped,
    BloodStationSmallToJSON,
} from './BloodStationSmall';
import type { OMinusAf7Enum } from './OMinusAf7Enum';
import {
    OMinusAf7EnumFromJSON,
    OMinusAf7EnumFromJSONTyped,
    OMinusAf7EnumToJSON,
} from './OMinusAf7Enum';
import type { OPlusAf7Enum } from './OPlusAf7Enum';
import {
    OPlusAf7EnumFromJSON,
    OPlusAf7EnumFromJSONTyped,
    OPlusAf7EnumToJSON,
} from './OPlusAf7Enum';

/**
 * 
 * @export
 * @interface AddressNeed
 */
export interface AddressNeed {
    /**
     * 
     * @type {number}
     * @memberof AddressNeed
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof AddressNeed
     */
    readonly author: string;
    /**
     * 
     * @type {number}
     * @memberof AddressNeed
     */
    readonly totalJoinedCount: number;
    /**
     * 
     * @type {string}
     * @memberof AddressNeed
     */
    image: string;
    /**
     * 
     * @type {number}
     * @memberof AddressNeed
     */
    bloodStationId: number;
    /**
     * 
     * @type {BloodStationSmall}
     * @memberof AddressNeed
     */
    readonly bloodStation: BloodStationSmall;
    /**
     * 
     * @type {Array<AddressNeedTimeSlotForBase>}
     * @memberof AddressNeed
     */
    readonly timeSlots: Array<AddressNeedTimeSlotForBase>;
    /**
     * 
     * @type {Array<AddressNeedJoinedUserForBase>}
     * @memberof AddressNeed
     */
    readonly joinedUsers: Array<AddressNeedJoinedUserForBase>;
    /**
     * 
     * @type {number}
     * @memberof AddressNeed
     */
    objectId?: number | null;
    /**
     * 
     * @type {OPlusAf7Enum}
     * @memberof AddressNeed
     */
    oPlus?: OPlusAf7Enum;
    /**
     * 
     * @type {OMinusAf7Enum}
     * @memberof AddressNeed
     */
    oMinus?: OMinusAf7Enum;
    /**
     * 
     * @type {APlusAf7Enum}
     * @memberof AddressNeed
     */
    aPlus?: APlusAf7Enum;
    /**
     * 
     * @type {AMinusAf7Enum}
     * @memberof AddressNeed
     */
    aMinus?: AMinusAf7Enum;
    /**
     * 
     * @type {BPlusAf7Enum}
     * @memberof AddressNeed
     */
    bPlus?: BPlusAf7Enum;
    /**
     * 
     * @type {BMinusAf7Enum}
     * @memberof AddressNeed
     */
    bMinus?: BMinusAf7Enum;
    /**
     * 
     * @type {AbPlusAf7Enum}
     * @memberof AddressNeed
     */
    abPlus?: AbPlusAf7Enum;
    /**
     * 
     * @type {AbMinusAf7Enum}
     * @memberof AddressNeed
     */
    abMinus?: AbMinusAf7Enum;
    /**
     * 
     * @type {BloodClass2c1Enum}
     * @memberof AddressNeed
     */
    bloodClass?: BloodClass2c1Enum;
    /**
     * 
     * @type {Date}
     * @memberof AddressNeed
     */
    lastDate: Date;
    /**
     * 
     * @type {number}
     * @memberof AddressNeed
     */
    requiredDonorsCount: number;
    /**
     * 
     * @type {Date}
     * @memberof AddressNeed
     */
    birthDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof AddressNeed
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof AddressNeed
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof AddressNeed
     */
    middleName?: string | null;
    /**
     * Минимальный размер 190x190, Максимальный размер 10000x10000
     * @type {string}
     * @memberof AddressNeed
     */
    image?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AddressNeed
     */
    cropping?: string;
    /**
     * 
     * @type {string}
     * @memberof AddressNeed
     */
    searchReason: string;
    /**
     * 
     * @type {AddressNeedStatus}
     * @memberof AddressNeed
     */
    status?: AddressNeedStatus | null;
    /**
     * 
     * @type {boolean}
     * @memberof AddressNeed
     */
    timeByBloodStation?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof AddressNeed
     */
    readonly createdAt: Date | null;
    /**
     * 
     * @type {number}
     * @memberof AddressNeed
     */
    contentType?: number | null;
}

/**
 * Check if a given object implements the AddressNeed interface.
 */
export function instanceOfAddressNeed(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "author" in value;
    isInstance = isInstance && "totalJoinedCount" in value;
    isInstance = isInstance && "image" in value;
    isInstance = isInstance && "bloodStationId" in value;
    isInstance = isInstance && "bloodStation" in value;
    isInstance = isInstance && "timeSlots" in value;
    isInstance = isInstance && "joinedUsers" in value;
    isInstance = isInstance && "lastDate" in value;
    isInstance = isInstance && "requiredDonorsCount" in value;
    isInstance = isInstance && "lastName" in value;
    isInstance = isInstance && "firstName" in value;
    isInstance = isInstance && "searchReason" in value;
    isInstance = isInstance && "createdAt" in value;

    return isInstance;
}

export function AddressNeedFromJSON(json: any): AddressNeed {
    return AddressNeedFromJSONTyped(json, false);
}

export function AddressNeedFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressNeed {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'author': json['author'],
        'totalJoinedCount': json['total_joined_count'],
        'image': json['image'],
        'bloodStationId': json['blood_station_id'],
        'bloodStation': BloodStationSmallFromJSON(json['blood_station']),
        'timeSlots': ((json['time_slots'] as Array<any>).map(AddressNeedTimeSlotForBaseFromJSON)),
        'joinedUsers': ((json['joined_users'] as Array<any>).map(AddressNeedJoinedUserForBaseFromJSON)),
        'objectId': !exists(json, 'object_id') ? undefined : json['object_id'],
        'oPlus': !exists(json, 'o_plus') ? undefined : OPlusAf7EnumFromJSON(json['o_plus']),
        'oMinus': !exists(json, 'o_minus') ? undefined : OMinusAf7EnumFromJSON(json['o_minus']),
        'aPlus': !exists(json, 'a_plus') ? undefined : APlusAf7EnumFromJSON(json['a_plus']),
        'aMinus': !exists(json, 'a_minus') ? undefined : AMinusAf7EnumFromJSON(json['a_minus']),
        'bPlus': !exists(json, 'b_plus') ? undefined : BPlusAf7EnumFromJSON(json['b_plus']),
        'bMinus': !exists(json, 'b_minus') ? undefined : BMinusAf7EnumFromJSON(json['b_minus']),
        'abPlus': !exists(json, 'ab_plus') ? undefined : AbPlusAf7EnumFromJSON(json['ab_plus']),
        'abMinus': !exists(json, 'ab_minus') ? undefined : AbMinusAf7EnumFromJSON(json['ab_minus']),
        'bloodClass': !exists(json, 'blood_class') ? undefined : BloodClass2c1EnumFromJSON(json['blood_class']),
        'lastDate': (new Date(json['last_date'])),
        'requiredDonorsCount': json['required_donors_count'],
        'birthDate': !exists(json, 'birth_date') ? undefined : (json['birth_date'] === null ? null : new Date(json['birth_date'])),
        'lastName': json['last_name'],
        'firstName': json['first_name'],
        'middleName': !exists(json, 'middle_name') ? undefined : json['middle_name'],
        'image': !exists(json, '_image') ? undefined : json['_image'],
        'cropping': !exists(json, 'cropping') ? undefined : json['cropping'],
        'searchReason': json['search_reason'],
        'status': !exists(json, 'status') ? undefined : AddressNeedStatusFromJSON(json['status']),
        'timeByBloodStation': !exists(json, 'time_by_blood_station') ? undefined : json['time_by_blood_station'],
        'createdAt': (json['created_at'] === null ? null : new Date(json['created_at'])),
        'contentType': !exists(json, 'content_type') ? undefined : json['content_type'],
    };
}

export function AddressNeedToJSON(value?: AddressNeed | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'image': value.image,
        'blood_station_id': value.bloodStationId,
        'object_id': value.objectId,
        'o_plus': OPlusAf7EnumToJSON(value.oPlus),
        'o_minus': OMinusAf7EnumToJSON(value.oMinus),
        'a_plus': APlusAf7EnumToJSON(value.aPlus),
        'a_minus': AMinusAf7EnumToJSON(value.aMinus),
        'b_plus': BPlusAf7EnumToJSON(value.bPlus),
        'b_minus': BMinusAf7EnumToJSON(value.bMinus),
        'ab_plus': AbPlusAf7EnumToJSON(value.abPlus),
        'ab_minus': AbMinusAf7EnumToJSON(value.abMinus),
        'blood_class': BloodClass2c1EnumToJSON(value.bloodClass),
        'last_date': (value.lastDate.toISOString().substring(0,10)),
        'required_donors_count': value.requiredDonorsCount,
        'birth_date': value.birthDate === undefined ? undefined : (value.birthDate === null ? null : value.birthDate.toISOString().substring(0,10)),
        'last_name': value.lastName,
        'first_name': value.firstName,
        'middle_name': value.middleName,
        '_image': value.image,
        'cropping': value.cropping,
        'search_reason': value.searchReason,
        'status': AddressNeedStatusToJSON(value.status),
        'time_by_blood_station': value.timeByBloodStation,
        'content_type': value.contentType,
    };
}

