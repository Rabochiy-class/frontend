/* tslint:disable */
/* eslint-disable */
/**
 * TelegramWebDonorSearch API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserTop } from './UserTop';
import {
    UserTopFromJSON,
    UserTopFromJSONTyped,
    UserTopToJSON,
} from './UserTop';

/**
 * 
 * @export
 * @interface AddressNeedJoinedUserForBase
 */
export interface AddressNeedJoinedUserForBase {
    /**
     * 
     * @type {number}
     * @memberof AddressNeedJoinedUserForBase
     */
    readonly id: number;
    /**
     * 
     * @type {UserTop}
     * @memberof AddressNeedJoinedUserForBase
     */
    readonly user: UserTop;
    /**
     * 
     * @type {Date}
     * @memberof AddressNeedJoinedUserForBase
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof AddressNeedJoinedUserForBase
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {number}
     * @memberof AddressNeedJoinedUserForBase
     */
    timeslot: number;
}

/**
 * Check if a given object implements the AddressNeedJoinedUserForBase interface.
 */
export function instanceOfAddressNeedJoinedUserForBase(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "user" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "timeslot" in value;

    return isInstance;
}

export function AddressNeedJoinedUserForBaseFromJSON(json: any): AddressNeedJoinedUserForBase {
    return AddressNeedJoinedUserForBaseFromJSONTyped(json, false);
}

export function AddressNeedJoinedUserForBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressNeedJoinedUserForBase {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'user': UserTopFromJSON(json['user']),
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'timeslot': json['timeslot'],
    };
}

export function AddressNeedJoinedUserForBaseToJSON(value?: AddressNeedJoinedUserForBase | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'timeslot': value.timeslot,
    };
}

