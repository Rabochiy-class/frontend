/* tslint:disable */
/* eslint-disable */
/**
 * TelegramWebDonorSearch API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PaginatedAddressNeedList,
} from '../models/index';
import {
    PaginatedAddressNeedListFromJSON,
    PaginatedAddressNeedListToJSON,
} from '../models/index';

export interface AddressNeedsListRequest {
    bloodStation?: number;
    id?: number;
    ordering?: string;
    page?: number;
    pageSize?: number;
    search?: string;
}

/**
 * 
 */
export class AddressNeedsApi extends runtime.BaseAPI {

    /**
     * Retrieves a list of address needs. The list can be filtered by city, main page status, and blood group.
     * List Address Needs
     */
    async addressNeedsListRaw(requestParameters: AddressNeedsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedAddressNeedList>> {
        const queryParameters: any = {};

        if (requestParameters.bloodStation !== undefined) {
            queryParameters['blood_station'] = requestParameters.bloodStation;
        }

        if (requestParameters.id !== undefined) {
            queryParameters['id'] = requestParameters.id;
        }

        if (requestParameters.ordering !== undefined) {
            queryParameters['ordering'] = requestParameters.ordering;
        }

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['page_size'] = requestParameters.pageSize;
        }

        if (requestParameters.search !== undefined) {
            queryParameters['search'] = requestParameters.search;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/address_needs`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaginatedAddressNeedListFromJSON(jsonValue));
    }

    /**
     * Retrieves a list of address needs. The list can be filtered by city, main page status, and blood group.
     * List Address Needs
     */
    async addressNeedsList(requestParameters: AddressNeedsListRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedAddressNeedList> {
        const response = await this.addressNeedsListRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
